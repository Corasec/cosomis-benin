version: '3'
services:
  dango-app:
    image: corasec/mis-app:latest
    restart: always
    ports:
      - '9000:9000'
    network_mode: "host"
    environment: # these variables are mapped from the .env file
      SECRET_KEY: '${SECRET_KEY}'
      ALLOWED_HOSTS: '${ALLOWED_HOSTS}'
      DATABASE_URL: '${DATABASE_URL}'
      NO_SQL_URL: '${NO_SQL_URL}'
      NO_SQL_USER: '${NO_SQL_USER}'
      NO_SQL_PASS: '${NO_SQL_PASS}'
      S3_BUCKET: '${S3_BUCKET}'
      S3_ACCESS: '${S3_ACCESS}'
      S3_SECRET: '${S3_SECRET}'
      KOBO_TOKEN: '${KOBO_TOKEN}'
      MAPBOX_ACCESS_TOKEN: '${MAPBOX_ACCESS_TOKEN}'
      DIAGNOSTIC_MAP_LATITUDE: '${DIAGNOSTIC_MAP_LATITUDE}'
      DIAGNOSTIC_MAP_LONGITUDE: '${DIAGNOSTIC_MAP_LONGITUDE}'
      DIAGNOSTIC_MAP_ZOOM: '${DIAGNOSTIC_MAP_ZOOM}'
      DIAGNOSTIC_MAP_WS_BOUND: '${DIAGNOSTIC_MAP_WS_BOUND}'
      DIAGNOSTIC_MAP_EN_BOUND: '${DIAGNOSTIC_MAP_EN_BOUND}'
      DIAGNOSTIC_MAP_ISO_CODE: '${DIAGNOSTIC_MAP_ISO_CODE}'

    # working_dir: /var/www
    # volumes:
    #   - ./:/var/www
    # networks:
    #   - app-network
    # extra_hosts:
    # - "host.docker.internal:host-gateway"

  nginx:
    image: nginx:alpine
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - '80:80'
      - '443:443'
    network_mode: "host"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/static:/var/www/app/static
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    # networks:
    #   - app-network
    # extra_hosts:
    # - "host.docker.internal:host-gateway"

  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

# networks:
#   app-network:
#     driver: bridge
